name: CI

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  unit:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v5
      - uses: pnpm/action-setup@v4
        with:
          version: 10.18.2
      - uses: actions/setup-node@v6
        with:
          node-version: '22'
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile
      - run: pnpm lint
      - run: pnpm typecheck
      - run: pnpm test:unit
      - run: pnpm build

  integration:
    runs-on: ubuntu-latest
    needs: unit
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v5
      - uses: pnpm/action-setup@v4
        with:
          version: 10.18.2
      - uses: actions/setup-node@v6
        with:
          node-version: '22'
          cache: 'pnpm'
      - name: Docker available?
        run: |
          docker --version
          docker info
      - run: pnpm install --frozen-lockfile
      - run: pnpm test:int

  e2e-vitest:
    runs-on: ubuntu-latest
    needs: integration
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v5
      - uses: pnpm/action-setup@v4
        with:
          version: 10.18.2
      - uses: actions/setup-node@v6
        with:
          node-version: '22'
          cache: 'pnpm'
      - name: Docker available?
        run: |
          docker --version
          docker info
      - run: pnpm install --frozen-lockfile
      - run: pnpm test:e2e:vitest

  e2e:
    runs-on: ubuntu-latest
    needs: integration
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v5
      - name: Docker available?
        run: |
          docker --version
          docker info
      - name: Build & Run E2E (Docker Compose)
        run: |
          docker compose -p peachshare-e2e \
            -f docker/docker-compose.base.yml \
            -f docker/docker-compose.e2e.yml \
            --profile e2e up --build --abort-on-container-exit --exit-code-from e2e-tests
      - name: Teardown
        if: always()
        run: |
          docker compose -p peachshare-e2e \
            -f docker/docker-compose.base.yml \
            -f docker/docker-compose.e2e.yml \
            down -v

  summary:
    needs: [unit, integration, e2e-vitest, e2e]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v6
        with:
          node-version: '22'
      - name: Print JSON summary
        run: |
          node - <<'NODE'
            const dim = s => `\x1b[2m${s}\x1b[0m`;
            const col = v => v === 'success' ? '\x1b[32m' : v === 'failure' ? '\x1b[31m' : '\x1b[33m';

            const unit = process.env.UNIT || 'unknown';
            const integration = process.env.INTEGRATION || 'unknown';
            const e2eVitest = process.env.E2E_VITEST || 'unknown';
            const e2e = process.env.E2E || 'unknown';

            const json = JSON.stringify({ unit, integration, 'e2e-vitest': e2eVitest, e2e });

            const colorize = s => s
              .replace(`"${unit}"`, `"${col(unit)}${unit}\x1b[0m"`)
              .replace(`"${integration}"`, `"${col(integration)}${integration}\x1b[0m"`)
              .replace(`"${e2eVitest}"`, `"${col(e2eVitest)}${e2eVitest}\x1b[0m"`)
              .replace(`"${e2e}"`, `"${col(e2e)}${e2e}\x1b[0m"`);

            console.log(dim('============== CI RESULT =============='));
            console.log(colorize(json));
            console.log(dim('======================================='));
          NODE
        env:
          UNIT: ${{ needs.unit.result }}
          INTEGRATION: ${{ needs.integration.result }}
          E2E_VITEST: ${{ needs.e2e-vitest.result }}
          E2E: ${{ needs.e2e.result }}
